<?php
/**
 * @file
 * Contains base function for module.
 */
/**
 * Implements hook_menu().
 */
function my_database_menu() {
 
  $items = array();
  $items['my_database/insert'] = array(
    'title' => 'Page for insert data',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_insert_form'),
    'access arguments' => array('administer site configuration'),
    'menu_name' => 'main-menu',
  );
  $items['my_database'] = array(
    'title' => 'Database page',
    'page callback' => 'my_database_content_page',
    'access arguments' => array('administer site configuration'),
    'menu_name' => 'main-menu',
  );
  $items['my_database/%/delete'] = array(
    'title callback' => 'my_database_delete_page_title',
    'title arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_delete_form', 1),
    'access arguments' => array('administer site configuration'),
  );
  $items['my_database/%/edit'] = array(
    'title callback' => 'my_database_edit_page_title',
    'title arguments' => array(1),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('my_database_edit_form', 1),
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Build form for insert data.
 */
function my_database_insert_form($form, $form_state) {
	$form = array();
  $form['number'] = array(
    '#type' => 'textfield',
    '#title' => t('Number'),
    '#required' => TRUE,
    '#maxlength' => 10,
    '#size' => 20,
    '#description' => t('Only numbers'),
  );
  $form['teaser'] = array(
    '#type' => 'textfield',
    '#title' => t('Teaser'),
    '#required' => TRUE,
    '#maxlength' => 150,
    '#size' => 20,
  );
  $form['text'] = array(
    '#type' => 'textarea',
    '#title' => t('Text'),
    '#required' => TRUE,
    '#size' => 20,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Validate for my_database_insert_form.
*/
function my_database_insert_form_validate($form, &$form_state) {
  if (drupal_strlen($form_state['values']['number']) > 10) {
    form_set_error('number', t('Field "@fieldname" must be less than @c chars.',
      array('@fieldname' => t('Number'), '@c' => 10)));
  }
  elseif (!ctype_digit($form_state['values']['number'])) {
    form_set_error('number', t('Field "number" must contains an integer.'));
  }
  if (drupal_strlen($form_state['values']['teaser']) > 150) {
    form_set_error('teaser', t('Field "@fieldname" must be less than @c chars.',
      array('@fieldname' => t('Teaser'), '@c' => 150)));
  }
}

/**
 * Submit for my_database_insert_form.
 */
function my_database_insert_form_submit($form, &$form_state) {
  $query = db_insert('custom_table')
    ->fields(array(
      'number' => $form_state['values']['number'],
      'teaser' => $form_state['values']['teaser'],
      'text'   => $form_state['values']['text'],
    ))
    ->execute();
  if ($query > 0) {
    drupal_set_message(t('Data has been successfully sent.'));
  }
  else {
    drupal_set_message(t("Data hasn't been sent."), 'error');
  }
}
/**
 * Build page with table.
 */
function my_database_content_page() {
  $header = array(t('ID'), t('Number'), t('Teaser'), t('Text'), t('Actions'));
  $rows = array();
  $query = db_select('custom_table', 'n')
        ->fields('n', array('id', 'number', 'teaser', 'text'))
        ->orderBy('n.id ', 'ASC')
        ->execute();
  while ($value = $query->fetchAssoc()) {
      $rows[] = array(
           $value['id'],
           $value['number'],
           $value['teaser'],
           $value['text'],
           l(t('Delete'), "my_database/{$value['id']}/delete"), 
           l(t('Edit'), "my_database/{$value['id']}/edit")
      );
  }
  return theme('table', array('header' => $header, 'rows' => $rows));
}   

//title callback for delete
function my_database_delete_page_title($id) {
  $placeholders = array(':id' => $id);
  $number = db_query("SELECT `number` FROM {custom_table} WHERE `id` = :id", $placeholders)->fetchField();
  return t('Are you sure you want to delete item with number "@num"?', array('@num' => $number));
}
//form for submit deleting
function my_database_delete_form($form, $form_state) {
  $form = array();
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['cancel'] = array(
    '#markup' => l(t('Cancel'), 'my_database'),
  );
  return $form;
}  
//execute function if delete submited
function my_database_delete_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $result = db_delete('custom_table')
   ->condition('id', $id)
   ->execute();
  $placeholders = array('@id' => $id);
  if ($result) {
      drupal_set_message(t('Record @id successfully removed.', $placeholders));
  }
  else {
      drupal_set_message(t('Record @id is undefined.', $placeholders), 'warning');
  }
  $form_state['redirect'] = 'my_database';
}
//title callback for edit
function my_database_edit_page_title($id) {
  $placeholders = array(':id' => $id);
  $number = db_query("SELECT `number` FROM {custom_table} WHERE `id` = :id", $placeholders)->fetchField();
  if ($number) {
        return t('Edit item with number "@num"', array('@num' => $number));
  }
  else {
    return t('Id not found.');
  }
}
/**
 * Build form for edit data.
 */
function my_database_edit_form($form, $form_state) {
  $form = array();
  $id = $form_state['build_info']['args'][0];
  // Extract data.
  $data = db_select('custom_table', 'n')
    ->condition('n.id', $id)
    ->fields('n')
    ->execute()
    ->fetchAssoc();
   // Check id.
  if (empty($data) || empty($data['number'])) {
    $placeholders = array(
      '@id' => $id,
      '!back' => l(t('Go back'), 'my_database'),
    );
    $form['text'] = array(
      '#markup' => t('Undefined "@id" id. !back.', $placeholders),
    );
    return $form;
  }
  // Build form with default values. 
  $form['number'] = array(
    '#title' => t('Number'),
    '#type' => 'textfield',
    '#maxlength' => 10,
    '#description' => t('Only numbers'),
    '#required' => TRUE,
    '#default_value' => $data['number'],
  );
  $form['teaser'] = array(
    '#title' => t('Teaser'),
    '#type' => 'textfield',
    '#maxlength' => 150,
    '#required' => TRUE,
    '#default_value' => $data['teaser'],
  );
  $form['text'] = array(
    '#title' => t('Text'),
    '#type' => 'textarea',
    '#required' => TRUE,
    '#default_value' => $data['text'],
  );
  // Action elements.
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  $form['actions']['cancel'] = array(
    '#markup' => l(t('Cancel'), 'my_database')
  );
 
  $form['#validate'][] = 'my_database_insert_form_validate';
 
  return $form;
}
//execute function if edit submited
function my_database_edit_form_submit($form, &$form_state) {
  $id = $form_state['build_info']['args'][0];
  $values = $form_state['values'];
 
  $query = db_update('custom_table')
    ->fields(array(
      'number' => $values['number'],
      'teaser' => $values['teaser'],
      'text'   => $values['text'],
    ))
    ->condition('id', $id)
    ->execute();
 
  if ($query) {
    drupal_set_message(t('Data updated successfully'));
  }
  else {
    drupal_set_message(t('Data is not updated'), 'warning');
  }
 
  $form_state['redirect'] = 'my_database';
}


